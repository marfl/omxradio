// Original code: https://github.com/rikkertkoppes/omxcontrol

// Modified by djazz / daniel-j to suit needs.
// Modified by marfl to suit needs.

var child_process = require('child_process');
var exec = child_process.exec;
var spawn = child_process.spawn;
var parseurl = require('url');

var pipe = false;

var omx = {};
var isPlaying = true;
var wasKilled = false;

var out = 'hdmi';
var volume = 0;

exec('killall omxplayer.bin');

omx.start = function(file, started) {
  if (!pipe) {
    pipe = 'omxcontrol';
    wasKilled = false;
    isPlaying = true;
    exec('mkfifo '+pipe, cb);
    //console.log('making pipe..');
  } else {
    console.log("Pipe already exists! Restarting...");
    omx.stop();
    setTimeout(function(){omx.start(file, started)}, 500);
  }
  function cb() {
    var cmd = 'omxplayer -b -o '+out+' --vol '+volume+' "'+file+'" < '+pipe;
    console.log("Exec:", cmd.substr(0, 80));
    exec(cmd, function (error, stdout, stderr) {
      //console.log(error, stdout, stderr);
      omx.onstop(wasKilled, stdout);
      isPlaying = false;
    });

    exec('echo . > '+pipe, started);
  }
};

omx.stop = function(cb) {
  if (!pipe) {
    if(cb) cb();
    return;
  }
  console.log('killing omxplayer..');
  
  exec('rm '+pipe);
  pipe = false;
  
  wasKilled = true;  
  exec('killall omxplayer.bin');

  if(cb) cb();
};

omx.sendKey = function(key, cb) {
  if (!pipe) return;
  exec('echo -n '+key+' > '+pipe, cb);
};

omx.mapKey = function(command,key,then) {
  omx[command] = function(cb) {
    omx.sendKey(key, function () {
      if (then) {
        then(cb);
      } else if (cb) {
        cb();
      }
    });

  };
};

omx.setAudioOut = function (newout) {

  if(newout == 'local') {
    out = 'local';
  } else {
    out = 'hdmi';
  }
}

omx.onstop = function () {};


omx.mapKey('quit','q',function() {
  omx.stop();
});
omx.mapKey('play','.');
omx.mapKey('pause','p');
//omx.mapKey('forward',"$'\\x1b\\x5b\\x43'");
//omx.mapKey('backward',"$'\\x1b\\x5b\\x44'");
omx.mapKey('backward', "\x5b\x44");
omx.mapKey('forward', "\x5b\x43");

omx.mapKey('volume_up', '+', function() {
  volume += 300;
});
omx.mapKey('volume_down', '-', function() {
  volume -= 300;
});

module.exports = omx;
